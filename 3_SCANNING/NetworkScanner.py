from scapy.all import srp, sr1
from scapy.layers.l2 import ARP, Ether
import sys, ipaddress
from scapy.layers.inet import IP, ICMP

target_network = sys.argv[1]
online_clients = []

ether = Ether(dst = 'ff:ff:ff:ff:ff:ff')
arp = ARP(pdst = target_network)
probe = ether/arp

result = srp(probe, timeout=3, verbose = 0)

'''
>>> ls(ARP)
hwtype     : XShortEnumField                     = ('1')
ptype      : XShortEnumField                     = ('2048')
hwlen      : FieldLenField                       = ('None')
plen       : FieldLenField                       = ('None')
op         : ShortEnumField                      = ('1')
hwsrc      : MultipleTypeField (SourceMACField, StrFixedLenField) = ('None')
psrc       : MultipleTypeField (SourceIPField, SourceIP6Field, StrFixedLenField) = ('None')
hwdst      : MultipleTypeField (MACField, StrFixedLenField) = ('None')
pdst       : MultipleTypeField (IPField, IP6Field, StrFixedLenField) = ('None')

>>> ls(Ether)
dst        : DestMACField                        = ('None')
src        : SourceMACField                      = ('None')
type       : XShortEnumField                     = ('36864')

'''
# [ answered, unanswered ]
# answered consists of [ sent, received ]

answered = result[0]

for sent, received in answered:
    online_clients.append({'ip' : received.psrc, 'MAC' : received.hswrc})

print("[+] Available Hosts: ")
print("IP " + " "*20 +"  MAC")

for client in online_clients:
    print('{}\t\t{}'.format(client['ip'], client['mac']))






#USING ICMP METHOD
print("[+] Scannig with ICMP...")

ip_list = [str(ip) for ip in ipaddress.IPv4Network(target_network, False)]

for ip in ip_list:
    probe1 = IP(dst = ip)/ICMP()
    result = sr1(probe1, timeout = 3, verbose=0)
    if result:
        print("[+] {} is online".format(ip))