import socket, sys, time, queue, threading

usage = "python3 port_scanner.py TARGET START_PORT END_PORT THREADS"

print("*"*50)
print("Python Simple Port Scanner")
print("*"*50)

target = sys.argv[1]
start_port = int(sys.argv[2])
end_port = int(sys.argv[3])
thread_no = int(sys.argv[4])

try:
    target = socket.gethostbyname(target)
except:
    print("[-] Host Resolution Failed :(")
    exit()

print()


if not target or not str(start_port) or not end_port or not thread_no:
    print(usage)
    exit()


def scan_port(t_no):
    while not q.empty():
        port = q.get()
        print("[+] Scanning for port {}...".format(port))
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(2)
            conn = s.connect_ex((target, port))
            if not conn:
                print("[+] Port {} is open".format(port))
        except:
            pass
        s.close()
        q.task_done()



start_time = time.time()

q = queue.Queue()
for j in range(start_port, end_port+1):
    q.put(j)



for i in range(thread_no):
    t = threading.Thread(target = scan_port, args=(i,))
    t.start()



q.join()

end_time = time.time()
print("Time Taken: {}".format(end_time - start_time))