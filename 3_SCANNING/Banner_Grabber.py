import socket, sys, time, queue, threading

usage = "python3 port_scanner.py TARGET START_PORT END_PORT THREADS"

print("*"*50)
print("Python Simple Port Scanner")
print("*"*50)

target = sys.argv[1]
start_port = int(sys.argv[2])
end_port = int(sys.argv[3])
thread_no = int(sys.argv[4])

result = "[+] Result:\nPORT\tSTATE\tSERVICE\n"

try:
    target = socket.gethostbyname(target)
except:
    print("[-] Host Resolution Failed :(")
    exit()


print("[+] Scanning target: {}".format(target))


if not target or not str(start_port) or not end_port or not thread_no:
    print(usage)
    exit()


def get_banner(port, s):
    if port == 80:
        headers = \
            "GET / HTTP/1.1\r\n" \
            f"Host: {target}\r\n" \
            "User-Agent: python-custom-script/2.22.0\r\n" \
            "Accept-Encoding: gzip, deflate\r\nAccept: */*\r\n" \
            "Connection: keep-alive\r\n\r\n"
        s.send(headers.encode())
        return s.recv(1024).decode()
    try:
        return s.recv(1024).decode()
    except:
        return "Not Found"


def scan_port(t_no):
    global result
    while not q.empty():
        port = q.get()
        print("[+] Scanning for port {}...".format(port))
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(2)
            conn = s.connect_ex((target, port))
            print("conn value: {}".format(conn))
            if not conn:
                banner = get_banner(port, s)
                banner = ''.join(banner.splitlines())
                result += f"{port}\tOPEN\t{banner}\n"
            s.close()
        except Exception as e:
            print(e)
        q.task_done()


start_time = time.time()


q = queue.Queue()


for j in range(start_port, end_port+1):
    q.put(j)


for i in range(thread_no):
    t = threading.Thread(target = scan_port, args=(i,))
    t.start()


q.join()


end_time = time.time()
print(result)
print("Time Taken: {}".format(end_time - start_time))


with open("ports.txt", 'w') as file:
    file.write(f"Port scan results for target: {target}\n")
    file.write(result)
print("[+] Written to file ports.txt")